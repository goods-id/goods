{
  "name": "goods",
  "version": "1.0.10",
  "description": "Pomona Design System",
  "main": "N/A",
  "license": "MIT",
  "private": true,
  "homepage": "https://github.com/PT-Tennova-Cipta-Inatech/pomona3-ui/tree/goods_master",
  "publishConfig": {
    "access": "public"
  },
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "commit": "cz",
    "bootstrap": "lerna bootstrap --force-local",
    "clean": "lerna run clean",
    "lerna": "lerna",
    "lint": "lerna run lint",
    "dev": "yarn workspace goods-core run dev",
    "report-coverage": "yarn workspace goods-core run report-coverage",
    "prebuild": "yarn workspace goods-core run compile && yarn workspace goods-helper run compile && yarn workspace goods-ui run compile",
    "storybook": "start-storybook -p 9001 -c .storybook-react -s .storybook-react/public",
    "storybook:build": "rimraf dist-web && yarn prebuild && build-storybook -c .storybook-react -o dist-web &&  node ./.storybook-react/after-build",
    "deploy:storybook": "yarn run storybook:build",
    "test": "yarn workspace goods-core run test",
    "test:coverage": "yarn workspace goods-core run test:coverage",
    "validate": "lerna run validate",
    "prettier-fix": "prettier --write \"**/*.+(js|jsx|tsx|ts|mdx)\"",
    "prerelease:alpha": "lerna version --no-git-tag-version --conventional-prerelease --yes && git add -u .",
    "release:alpha": "lerna publish from-package --pre-dist-tag next",
    "postrelease:alpha": "git commit -m 'chore(release): Publish alpha' && git push"
  },
  "devDependencies": {
    "@babel/core": "^7.10.2",
    "@babel/plugin-proposal-class-properties": "^7.10.1",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.10.1",
    "@babel/plugin-proposal-optional-chaining": "^7.10.1",
    "@babel/plugin-transform-react-jsx": "^7.10.4",
    "@babel/plugin-transform-runtime": "^7.12.10",
    "@babel/preset-env": "^7.10.2",
    "@babel/preset-react": "^7.10.1",
    "@babel/preset-typescript": "^7.10.1",
    "@commitlint/cli": "^9.1.2",
    "@commitlint/config-conventional": "^9.1.2",
    "@mdx-js/loader": "^1.6.11",
    "@rollup/plugin-babel": "^5.2.2",
    "@rollup/plugin-node-resolve": "^8.0.1",
    "@rollup/plugin-url": "^5.0.1",
    "@storybook/addon-a11y": "^6.0.18",
    "@storybook/addon-controls": "^6.0.18",
    "@storybook/addon-docs": "^6.0.18",
    "@storybook/addon-knobs": "^6.0.18",
    "@storybook/addon-links": "^6.0.18",
    "@storybook/addon-storysource": "^6.0.18",
    "@storybook/addon-viewport": "^6.0.18",
    "@storybook/react": "^6.0.18",
    "@storybook/source-loader": "^6.0.18",
    "@types/node": "^14.0.13",
    "@typescript-eslint/eslint-plugin": "^3.3.0",
    "@typescript-eslint/parser": "^3.3.0",
    "babel-loader": "^8.1.0",
    "babel-plugin-styled-components": "^1.11.1",
    "babel-preset-react-app": "^9.1.2",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^7.3.0",
    "eslint-config-airbnb": "^18.2.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-import": "^2.21.2",
    "eslint-plugin-jsx-a11y": "^6.3.1",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-react": "^7.20.0",
    "eslint-plugin-react-hooks": "^4.0.4",
    "husky": "^4.3.0",
    "lerna": "^3.22.0",
    "lint-staged": "^10.2.11",
    "prettier": "^2.0.5",
    "react-docgen-typescript": "^1.20.2",
    "react-docgen-typescript-loader": "^3.7.2",
    "rimraf": "^3.0.2",
    "rollup": "^2.17.1",
    "rollup-plugin-auto-external": "^2.0.0",
    "rollup-plugin-commonjs": "^10.1.0",
    "rollup-plugin-copy": "^3.3.0",
    "rollup-plugin-typescript2": "^0.27.1",
    "rollup-plugin-uglify": "^6.0.4",
    "storybook-addon-jsx": "^7.3.4",
    "typescript": "^4.0.3",
    "yarn": "^1.22.4"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx,css,scss,html}": [
      "eslint",
      "prettier",
      "prettier --write"
    ]
  },
  "dependencies": {
    "csstype": "^3.0.3",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "styled-components": "^5.1.1",
    "tslib": "^2.0.1"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "prepare-commit-msg": "exec < /dev/tty && git cz --hook || true"
    }
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
